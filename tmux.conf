# Replace C-b with C-s for the prefix key
unbind C-b 
set -g prefix C-s
bind-key -r C-s send-prefix

# Reload tmux.conf config file with prefix r
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

# Navigate panes using HJKL and work while using vim 
# Note: Tmux navigator plugin needs to be installed in vimrc
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# Use 256 color mode, useful for Vim colorschemes
set-option -g defualt-terminal "screen-256color"

# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

# Change status bar color to gray with white text
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'


# Show window fullname up to 50 characters
set -g status-left-length 50

#Show date and time towards right of status bar
set -g status-right " #(date '+%a, %b %d - %I:%M') "

#Split windows vertical and horizontal with - and \ respectively
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c "#{pane_current_path}"

# Renumber windows starting with 1
set -g base-index 1
set -g renumber-windows on

# Detach currently active pane move to new window
bind-key b break-pane -d

# Navigate sessions using choose-tree (binded to Ctrl J)
bind-key C-j choose-tree

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Fuzzy matching session navigation via fzf utility
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# "break session" and "kill session" without exiting tmux
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux
display-message -p "#S")" || tmux kill-session'
